# Size of the listen queue
net.core.somaxconn = 32768

# Size of the incoming packets queue
net.core.netdev_max_backlog = 32768

# Enable syncookies
# Note, that syncookies is fallback facility.
# It **MUST NOT** be used to help highly loaded servers to stand
# against legal connection rate. If you see synflood warnings in your logs,
# but investigation shows that they occur because of overload with legal
# connections, you should tune another parameters until this warning disappear.
# Do NOT disable syncookies!!!
net.ipv4.tcp_syncookies = 1

# Increase max half-open connections
net.ipv4.tcp_max_syn_backlog = 65536

# Increase max number of sockets allowed in TIME_WAIT
net.ipv4.tcp_max_tw_buckets = 262144

# Allow to reuse TIME-WAIT sockets for new connections when it is safe from protocol viewpoint.
net.ipv4.tcp_tw_reuse = 1


# Increase max TCP orphans
# These are sockets which have been closed and no longer have a file handle attached to them
net.ipv4.tcp_max_orphans=262144

# The hard limits for the maximum amount of socket buffer space
net.core.rmem_max = 26214400
net.core.rmem_default = 6250000
net.core.wmem_max = 26214400
net.core.wmem_default = 6250000

# Tcp buffer space tuning
net.ipv4.tcp_rmem = 4096 6250000 26214400
net.ipv4.tcp_wmem = 4096 6250000 26214400

# Udp buffer space tuning
net.ipv4.udp_mem = 262144 327680 524288
net.ipv4.udp_rmem_min = 8192
net.ipv4.udp_wmem_min = 8192

# Increase port numbers that are allowed for TCP and UDP traffic
net.ipv4.ip_local_port_range = 32768 65535

# Set our preffered congestion control method
net.ipv4.tcp_congestion_control = htcp

# Send syn and answer with synack less aggressivly, this is "anti-DDOS syn-flood" protection
net.ipv4.tcp_syn_retries = 2
net.ipv4.tcp_synack_retries = 2

# Allows TCP to send "duplicate" SACKs
net.ipv4.tcp_dsack = 1

# Enable select acknowledgments
net.ipv4.tcp_sack = 1

# Enable FACK congestion avoidance and fast restransmission
net.ipv4.tcp_fack = 1

# Enable timestamps (RFC1323)
net.ipv4.tcp_timestamps = 1

# Enable window scaling (RFC1323)
net.ipv4.tcp_window_scaling = 1

# Prevent "TIME-WAIT Assassination hazards" described in RFC1337
net.ipv4.tcp_rfc1337 = 1

# Decrase time that keeps sockets in FIN-WAIT-2 state
net.ipv4.tcp_fin_timeout = 9

# Decrease the time default value for connections to keep alive
net.ipv4.tcp_keepalive_intvl = 30
net.ipv4.tcp_keepalive_probes = 3
net.ipv4.tcp_keepalive_time = 300

# Disable forwarding
net.ipv4.ip_forward = 0
net.ipv6.conf.all.forwarding = 0


#
# Neighbour table tunings for big networks
#

# IPv4
net.ipv4.neigh.default.gc_thresh1 = 4096
net.ipv4.neigh.default.gc_thresh2 = 8192
net.ipv4.neigh.default.gc_thresh3 = 16384

net.ipv4.neigh.default.base_reachable_time_ms = 3600000
{% for ifname in ansible_interfaces|sort %}
{% if ifname != "lo" %}
net.ipv4.neigh.{{ ifname }}.base_reachable_time_ms = 3600000
{% endif %}
{% endfor %}

# IPv6
net.ipv6.neigh.default.gc_thresh1 = 4096
net.ipv6.neigh.default.gc_thresh2 = 8192
net.ipv6.neigh.default.gc_thresh3 = 16384

net.ipv6.neigh.default.base_reachable_time_ms = 3600000
{% for ifname in ansible_interfaces|sort %}
{% if ifname != "lo" %}
net.ipv6.neigh.{{ ifname }}.base_reachable_time_ms = 3600000
{% endif %}
{% endfor %}

net.ipv6.neigh.default.retrans_time_ms = 30000
{% for ifname in ansible_interfaces|sort %}
{% if ifname != "lo" %}
net.ipv6.neigh.{{ ifname }}.retrans_time_ms = 30000
{% endif %}
{% endfor %}

# Increase number of ipv6 routes
net.ipv6.route.max_size = 1048576

# Disable DAD 
net.ipv6.conf.all.accept_dad = 0
net.ipv6.conf.default.accept_dad = 0
{% for ifname in ansible_interfaces|sort %}
{% if ifname != "lo" %}
net.ipv6.conf.{{ ifname }}.accept_dad = 0
{% endif %}
{% endfor %}


{% if ydb_congestion_setting is defined %}
net.ipv4.tcp_allowed_congestion_control = reno cubic {{ ydb_congestion_setting }}
net.ipv4.tcp_congestion_control = {{ ydb_congestion_setting }}
{% endif %}
